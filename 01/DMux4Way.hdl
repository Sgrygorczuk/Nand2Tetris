// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux4Way.hdl

/**
 * 4-way demultiplexor:
 * {a, b, c, d} = {in, 0, 0, 0} if sel == 00
 *                {0, in, 0, 0} if sel == 01
 *                {0, 0, in, 0} if sel == 10
 *                {0, 0, 0, in} if sel == 11
 */

CHIP DMux4Way {
    IN in, sel[2];
    OUT a, b, c, d;

    PARTS:
    // Put your code here:         
    /*Send in the In and use the Sel second row 01 11 the 0 and 1, to create two input signals      
    *|  in   |  sel[1]  |   temp0   |   temp1   |
    *|   0   |   0      |    0      |    0      |
    *|   0   |   0   	|    0      |    0      |
    *|   0   |   1   	|    0      |    0      |
    *|   0   |   1  	|    0      |    0      |     
    *|   1   |   0      |    1      |    0      |
    *|   1   |   0   	|    1      |    0      |
    *|   1   |   1   	|    0      |    1      |
    *|   1   |   1  	|    0      |    1      |
    */
    DMux(in = in, sel = sel[1], a = temp0, b = temp1);
                                             
    /*Use the two new input signals to perform DMux to obtain a,b,c,d
    *|  temp0   |  sel[0]  |   a   |   b   | 
    *|   1      |   0      |   1   |   0   |
    *|   1      |   1      |   0   |   1   |
    *|   0      |   0      |   0   |   0   |
    *|   0      |   1  	   |   0   |   0   |
    *
    *|  temp1   |  sel[0]  |   c   |   d   | 
    *|   0      |   0      |   0   |   0   | 
    *|   0      |   1      |   0   |   0   | 
    *|   1      |   0      |   1   |   0   | 
    *|   1      |   1  	   |   0   |   1   |  
    */
    
    DMux(in = temp0, sel = sel[0], a = a, b = b);
    DMux(in = temp1, sel = sel[0], a = c, b = d);
}